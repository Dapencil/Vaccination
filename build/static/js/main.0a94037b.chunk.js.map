{"version":3,"sources":["service/ClientService.js","components/ClientComponent.js","components/CenterComponent.js","components/ErrorPage.js","App.js","reportWebVitals.js","index.js"],"names":["checkdata","data","axios","post","id","name","surname","age","gender","ClientComponent","navigate","useNavigate","useForm","register","submit","errors","handleSubmit","then","res","status","console","log","catch","err","onSubmit","type","value","CenterComponent","useParams","useState","centers","setCenters","time","setTime","minDate","Date","maxDate","useEffect","get","format","center","slotNum","date","className","selected","disabled","hidden","map","utils","DateFnsUtils","locale","thLocale","DatePicker","onChange","slot","ErrorPage","msg","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a94037b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = \"http://localhost:8080/api/checkdata\";\r\n\r\nfunction checkdata(data){\r\n    return axios.post(url,{\r\n        id : data.id,\r\n        name : data.name,\r\n        surname : data.surname,\r\n        age : data.age,\r\n        gender : data.gender,\r\n    })\r\n}\r\n\r\nexport default checkdata;\r\n","import { useForm } from \"react-hook-form\";\r\nimport checkdata from \"../service/ClientService\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst ClientComponent = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const submit = handleSubmit((data) => {\r\n        checkdata(data).then((res) => {\r\n            if(res.status===202){\r\n                console.log(\"Hey\");\r\n                navigate(`/pickdate/${data.id}`);\r\n            }\r\n            }).catch((err) =>{\r\n                navigate(`/error/${err}`);\r\n            });\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div>\r\n                    <label>เลขบัตรปชช</label>\r\n                    <input type=\"text\" {...register(\"id\")} />\r\n                </div>\r\n                <div>\r\n                    <label>ชื่อ</label>\r\n                    <input type=\"text\" {...register(\"name\")}/>\r\n                </div>\r\n                <div>\r\n                    <label>นามสกุล</label>\r\n                    <input type=\"text\" {...register(\"surname\")}/>\r\n                </div>\r\n                <div>\r\n                    <label>อายุ</label>\r\n                    <input type=\"number\" {...register(\"age\")}/>\r\n                </div>\r\n                <div>\r\n                    <label>เพศ</label>\r\n                    <select type=\"text\" {...register(\"gender\")}>\r\n                        <option value=\"ชาย\">ชาย</option>\r\n                        <option value=\"หญิง\">หญิง</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\">ดำเนินการต่อ</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientComponent;\r\n\r\n","import axios from \"axios\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport thLocale from \"date-fns/locale/th\";\r\nimport {format,add} from 'date-fns';\r\nimport { DatePicker , MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport '../main.css';\r\n\r\n\r\nconst CenterComponent = () => {\r\n    const navigate = useNavigate();\r\n    const { id } = useParams(); \r\n    const [centers,setCenters] = useState([]);\r\n    const [time,setTime] = useState(null);\r\n    const { register, errors, handleSubmit } = useForm();\r\n    const data = [1,2,3,4,5,6,7,8];\r\n    const minDate = new Date(2021,5,1);\r\n    const maxDate = new Date(2021,10,1); \r\n\r\n    useEffect(() => {\r\n    axios.get('http://localhost:8080/api/centers')\r\n        .then(res => {\r\n            setCenters(res.data)\r\n        });\r\n      \r\n    },[])\r\n\r\n    const submit = handleSubmit((data) => {\r\n        data['id'] = id;\r\n        data['time'] = format(time,\"yyyy-MM-dd\");\r\n        axios.post('http://localhost:8080/api/checkfreeslot',{\r\n            id : data.id,\r\n            center : data.center,\r\n            slotNum : data.slotNum,\r\n            date : data.time,\r\n        }).catch((err) =>{\r\n            navigate(`/error/${err}`);\r\n        });\r\n        console.log(id)\r\n        console.log(format(time,\"yyyy-MM-dd\"))\r\n        console.log(data.center)\r\n        console.log(data.slotNum)\r\n    })\r\n\r\n    return (<div>\r\n        <form onSubmit={submit}>\r\n            <div className=\"form-control\">\r\n                <label>ศูนย์ให้บริการ</label>\r\n                <select {...register(\"center\")}>\r\n                    <option value=\"\" selected disabled hidden>เลือกสถานบริการ</option>\r\n                    {centers.map(center => <option value={center.name}>{center.name}</option>)}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>วันฉีดเข็มแรก</label>\r\n                <MuiPickersUtilsProvider utils = {DateFnsUtils} locale={thLocale}>\r\n                    <DatePicker minDate={minDate} maxDate={maxDate} value = {time} onChange={setTime}/>\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>เวลาฉีด</label>\r\n                <select {...register(\"slotNum\")}>\r\n                    {data.map(slot => <option value={slot}>{slot}</option>)}\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\">click</button>\r\n        </form>        \r\n    </div>\r\n    );\r\n\r\n}\r\nexport default CenterComponent;","import { useParams } from \"react-router\";\r\n\r\nconst ErrorPage = () => {\r\n    const {msg} = useParams();\r\n    \r\n    return <h1>{msg}</h1>\r\n\r\n}\r\nexport default ErrorPage;","import React , { Component, useEffect ,useState } from 'react';\n// import CenterComponent from './components/SecondFormComponent';\nimport ClientComponent from './components/ClientComponent';\nimport './App.css';\nimport {BrowserRouter as Router,Route, Routes} from 'react-router-dom';\nimport CenterComponent from './components/CenterComponent';\nimport ErrorPage from './components/ErrorPage';\n\nconst App = () => {\n  \n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/pickdate/:id\" element={<CenterComponent/>}/>\n        <Route path=\"/\" element={<ClientComponent/>}/>\n        <Route path=\"/error/:msg\" element={<ErrorPage/>}/>\n      </Routes>    \n    </Router>\n    \n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}